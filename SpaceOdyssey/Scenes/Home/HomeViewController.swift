//
//  HomeViewController.swift
//  SpaceOdyssey
//
//  Created by Martin Lukacs on 19/09/2018.
//  Copyright (c) 2018 martin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PromiseKit

protocol HomeDisplayLogic: class {
  func displayHomeLaunches(viewModel: Home.FetchHomeLaunches.ViewModel)
}

class HomeViewController: UIViewController, HomeDisplayLogic {
  var interactor: HomeBusinessLogic?
  var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = HomeInteractor()
    let presenter = HomePresenter()
    let router = HomeRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    fetchHomeLaunches()
  }
  
//    override func viewWillAppear(_ animated: Bool) {
//
//        firstly {
//            APIManager.callApi(SpaceXApi.launches(), dataReturnType: Launches.self)
//            }.done { results in
//                print("WOOOT Success \(results.count)")
//            }.catch { error in
//                print("\(error)")
//            }
//    }
    
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func fetchHomeLaunches() {
    let request = Home.FetchHomeLaunches.Request()
    interactor?.doSomething(request: request)
  }
  
  func displayHomeLaunches(viewModel: Home.FetchHomeLaunches.ViewModel) {

    }
}
