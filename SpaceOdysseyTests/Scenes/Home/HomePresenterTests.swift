//
//  HomePresenterTests.swift
//  SpaceOdyssey
//
//  Created by Martin Lukacs on 19/09/2018.
//  Copyright (c) 2018 martin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import SpaceOdyssey
import Quick
import Nimble

class HomePresenterTests: QuickSpec {
    
    override func spec() {
        describe("HomePresenter tests") {
            
            // MARK: Subject under test
            
            var sut: HomePresenter!
            var launch:Launch!

            beforeSuite {
                LaunchesNetworkInjector.networkManager = LaunchesNetworkManagerMock()
                setupHomePresenter()
                launch = try! Launch.validLaunch.decode()
            }
            
            // MARK: Test setup
            
            func setupHomePresenter() {
                sut = HomePresenter()
            }
            
            // MARK: Test doubles
            
            class HomeDisplayLogicSpy: HomeDisplayLogic {

                var displayHomeLaunchesCalled = false
                var viewModel: Home.FetchHomeLaunches.ViewModel!
                
                func displayHomeLaunches(viewModel: Home.FetchHomeLaunches.ViewModel) {
                    self.viewModel = viewModel
                    displayHomeLaunchesCalled = true
                }
                
                func displayHomeSortedLaunches(viewModel: Home.FetchHomeLaunches.ViewModel) {
                    
                }
            }
            
            // MARK: Tests
            
            context("Display View controller") {
                it("Should ask to display space x launches") {

                    let spy = HomeDisplayLogicSpy()
                    sut.viewController = spy
                    let response = Home.FetchHomeLaunches.Response(launches: [launch], error: nil)

                    sut.presentFetchHomeData(response: response)
                    expect(spy.displayHomeLaunchesCalled).to(beTrue())
                }
            }
        }
    }
}
